<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.meta.crm.core.mapper.CrmContractPlanFundMapper">

    <resultMap type="com.meta.platform.contract.intf.entity.ContractPlanFund" id="contractPlanFundMap">
                    <result property="id" column="id"/>
                    <result property="contractId" column="contract_id"/>
                    <result property="customerId" column="customer_id"/>
                    <result property="planFundBatch" column="plan_fund_batch"/>
                    <result property="planFundAmount" column="plan_fund_amount"/>
                    <result property="planFundStatus" column="plan_fund_status"/>
                    <result property="planFundDate" column="plan_fund_date"/>
                    <result property="actualAmount" column="actual_amount"/>
                    <result property="tenantId" column="tenant_id"/>
                    <result property="delFlag" column="del_flag"/>
                    <result property="createBy" column="create_by"/>
                    <result property="createTime" column="create_time"/>
                    <result property="updateBy" column="update_by"/>
                    <result property="updateTime" column="update_time"/>
                    <result property="remark" column="remark"/>
            </resultMap>

    <!-- 可根据自己的需求，是否要使用 -->
    <sql id="Base_Column_List">
                    id,                    contract_id,                    customer_id,                    plan_fund_batch,                    plan_fund_amount,                    plan_fund_status,                    plan_fund_date,                    actual_amount,                    tenant_id,                    del_flag,                    create_by,                    create_time,                    update_by,                    update_time,                    remark            </sql>

    <select id="listTable" parameterType="com.meta.crm.intf.req.ro.CrmContractPlanFundRo" resultMap="contractPlanFundMap">
        select
        planfund.*,b.customer_name customerName,c.contract_name contractName
        from contract_plan_fund planfund
        left join crm_customer b on planfund.customer_id = b.id and b.tenant_id = #{tenantId}
        left join contract c on planfund.contract_id = c.id and c.tenant_id = #{tenantId}
        left join crm_assign assign on planfund.id = assign.target_id and assign.target_type = 'contractPlanFund' and
        assign.tenant_id = #{tenantId}
        <where>
        1 = 1 and planfund.del_flag = 0 and planfund.tenant_id = #{tenantId}
            <if test="contractName != null">
                and c.contract_name like CONCAT('%',#{contractName},'%')
            </if>
            <if test="customerName != null">
                and b.customer_name like CONCAT('%',#{customerName},'%')
            </if>
            <if test="startDate != null">
                and <![CDATA[ planfund.create_time >= #{startDate} ]]>
            </if>
            <if test="endDate != null">
                and <![CDATA[ planfund.create_time <= #{endDate} ]]>
            </if>
            <if test="managerId != null">
                and assign.manager_id = #{managerId}
            </if>

                <if test="id != null">
                    and planfund.id = #{id}
                </if>
                            <if test="contractId != null">
                    and planfund.contract_id = #{contractId}
                </if>
                            <if test="customerId != null">
                    and planfund.customer_id = #{customerId}
                </if>
                            <if test="planFundBatch != null">
                    and planfund.plan_fund_batch = #{planFundBatch}
                </if>
                            <if test="planFundAmount != null">
                    and planfund.plan_fund_amount = #{planFundAmount}
                </if>
                            <if test="planFundStatus != null">
                    and planfund.plan_fund_status = #{planFundStatus}
                </if>
                            <if test="planFundDate != null">
                    and planfund.plan_fund_date = #{planFundDate}
                </if>
                            <if test="actualAmount != null">
                    and planfund.actual_amount = #{actualAmount}
                </if>
                            <if test="tenantId != null">
                    and planfund.tenant_id = #{tenantId}
                </if>
                            <if test="delFlag != null">
                    and planfund.del_flag = #{delFlag}
                </if>
                            <if test="createBy != null">
                    and planfund.create_by = #{createBy}
                </if>
                            <if test="createTime != null">
                    and planfund.create_time = #{createTime}
                </if>
                            <if test="updateBy != null">
                    and planfund.update_by = #{updateBy}
                </if>
                            <if test="updateTime != null">
                    and planfund.update_time = #{updateTime}
                </if>
                            <if test="remark != null">
                    and planfund.remark = #{remark}
                </if>
                    </where>
        order by planfund.create_time desc
    </select>

    <select id="queryBatchCountByContractId" resultType="java.lang.Integer">
        select count(*) from contract_plan_fund
        where contract_id = #{arg0} and tenant_id = #{tenant_id}
    </select>

</mapper>
