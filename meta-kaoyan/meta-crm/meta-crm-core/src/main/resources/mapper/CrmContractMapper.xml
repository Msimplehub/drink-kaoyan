<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.meta.crm.core.mapper.CrmContractMapper">

    <select id="queryList" parameterType="com.meta.crm.intf.req.ro.CrmContractRo"
            resultType="com.meta.crm.intf.res.vo.contract.CrmContractListVo">
        SELECT
        c.id AS id,
        c.contract_name AS contractName,
        c.customer_id AS customerId,
        c.contract_type AS contractType,
        c.contract_start_date AS contractStartDate,
        c.contract_amount AS contractAmount,
        c.contract_status AS contractStatus,
        c.contract_sign_date AS contractSignDate,
        c.contract_num AS contractNum,
        ca.manager_id AS assignUserId,
        c.create_by AS createUserId,
        c.create_time AS createTime
        FROM
        contract c
        LEFT JOIN crm_customer cc ON c.customer_id = cc.id
        LEFT JOIN crm_assign ca ON c.id = ca.target_id
        AND ca.target_type = 'contract'
        <if test="businessId!=null">
            left join crm_contract_relate ccl on c.id=ccl.contract_id
        </if>
        <where>
            1 = 1
            and c.del_flag=0 and cc.del_flag=0 and ca.del_flag=0
            and c.tenant_id=#{tenantId} and cc.tenant_id = #{tenantId} and ca.tenant_id=#{tenantId}
            <if test="customerId != null">
                and c.customer_id = #{customerId} and cc.id=#{customerId}
            </if>
            <if test="mixedName != null">
                and  (c.contract_name like concat('%', #{mixedName}, '%') or
                cc.customer_name like concat('%', #{mixedName}, '%') )
            </if>
            <if test="contractNameReg != null">
                and c.contract_name like concat('%', #{contractNameReg}, '%')
            </if>
            <if test="customerNameReg != null">
                and cc.customer_name like concat('%', #{customerNameReg}, '%')
            </if>
            <if test="contractStatus != null">
                and c.contract_status = #{contractStatus}
            </if>
            <if test="createTimeStart != null">
                and c.create_time &gt;= #{createTimeStart}
            </if>
            <if test="createTimeEnd != null">
                and c.create_time &lt;= #{createTimeEnd}
            </if>
            <if test="assignUserId != null">
                and ca.manager_id = #{assignUserId}
            </if>
            <if test="signTimeStart != null">
                and c.contract_sign_date &gt;= #{signTimeStart}
            </if>
            <if test="signTimeEnd != null">
                and c.contract_sign_date &lt;= #{signTimeEnd}
            </if>
            <if test="businessId!=null">
                AND ccl.tenant_id=#{tenantId}
                AND ccl.target_type = 'business'
                and ccl.target_id=#{businessId}
            </if>
        </where>
        order by c.create_time desc, c.id desc
    </select>

    <select id="queryContractRelateBusinessName" parameterType="com.meta.crm.intf.req.ro.CrmContractRo"
            resultType="com.meta.crm.intf.res.vo.contract.ContractBusinessName">
        SELECT
        c.id AS id,
        cb.id as businessId,
        cb.business_name AS businessName
        FROM
        contract c
        LEFT JOIN crm_contract_relate ccr ON c.id = ccr.contract_id
        AND ccr.target_type = 'business'
        LEFT JOIN crm_business cb ON ccr.target_id = cb.id
        WHERE
        1 = 1
        AND c.del_flag = 0
        AND ccr.del_flag = 0
        AND cb.del_flag = 0
        AND c.tenant_id = #{tenantId}
        AND ccr.tenant_id = #{tenantId}
        AND cb.tenant_id = #{tenantId}
        AND c.id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="queryListForFundPlan" parameterType="com.meta.crm.intf.req.contract.CrmContractListForFundPlanQry"
            resultType="com.meta.crm.intf.res.vo.contract.CrmContractListForFundPlanVo">
        SELECT
            c.id AS id,
            c.contract_name AS contractName,
            c.contract_amount as contractAmount,
            count( DISTINCT cpf.id ) AS fundPlanCount
        FROM
            contract c
            LEFT JOIN contract_plan_fund cpf ON c.id = cpf.contract_id
        WHERE
            c.del_flag = 0
            AND cpf.del_flag = 0
            and c.tenant_id = #{tenantId}
            and cpf.tenant_id = #{tenantId}
            AND c.customer_id = #{customerId}
            AND cpf.customer_id =#{customerId}
        GROUP BY
            c.id
    </select>

    <select id="queryListByCustomerOrBusinessId"
            parameterType="com.meta.crm.intf.req.contract.CrmContractListByCustomerBusinessQry"
            resultType="com.meta.crm.intf.res.vo.contract.CrmContractListByCustomerBusinessVo">
        SELECT
        c.id AS contractId,
        c.contract_name AS contractName,
        c.contract_sign_date as contractSignDate,
        c.contract_status as contractStatus,
        c.contract_amount as contractAmount
        FROM
        contract c
        <if test="businessId!=null">
            left join crm_contract_relate ccl on c.id=ccl.contract_id
        </if>
        WHERE
        c.del_flag = 0
        and c.tenant_id = #{tenantId}
        <if test="customerId!=null">
            AND c.customer_id = #{customerId}
        </if>
        <if test="businessId!=null">
            AND ccl.tenant_id=#{tenantId}
            AND ccl.target_type = 'business'
            and ccl.target_id=#{businessId}
        </if>
        order by c.create_time desc, c.id desc
    </select>

</mapper>