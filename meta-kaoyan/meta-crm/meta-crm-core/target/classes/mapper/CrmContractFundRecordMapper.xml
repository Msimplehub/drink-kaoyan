<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.meta.crm.core.mapper.CrmContractFundRecordMapper">

    <resultMap type="com.meta.platform.contract.intf.entity.ContractFundRecord" id="contractFundRecordMap">
        <result property="id" column="id"/>
        <result property="customerId" column="customer_id"/>
        <result property="contractId" column="contract_id"/>
        <result property="contractPlanFundId" column="contract_plan_fund_id"/>
        <result property="actualFundAmount" column="actual_fund_amount"/>
        <result property="actualFundDate" column="actual_fund_date"/>
        <result property="payType" column="pay_type"/>
        <result property="tenantId" column="tenant_id"/>
        <result property="delFlag" column="del_flag"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <!-- 可根据自己的需求，是否要使用 -->
    <sql id="Base_Column_List">
                    id,                    customer_id,                    contract_id,                    contract_plan_fund_id,                    actual_fund_amount,                    actual_fund_date,                    pay_type,                    tenant_id,                    del_flag,                    create_by,                    create_time,                    update_by,                    update_time,                    remark            </sql>

    <select id="listTable" parameterType="com.meta.crm.intf.req.ro.CrmContractFundRecordRo" resultMap="contractFundRecordMap">
        select
        record.*,b.customer_name customerName,c.contract_name contractName
        from contract_fund_record record
        left join crm_customer b on record.customer_id = b.id and b.tenant_id = #{tenantId}
        left join contract c on record.contract_id = c.id and c.tenant_id = #{tenantId}
        <where>
            1 = 1 and record.del_flag = 0 and record.tenant_id = #{tenantId}
            <if test="contractName != null">
                and c.contract_name like CONCAT('%',#{contractName},'%')
            </if>
            <if test="customerName != null">
                and b.customer_name like CONCAT('%',#{customerName},'%')
            </if>
            <if test="startDate != null">
                and <![CDATA[ record.create_time >= #{startDate} ]]>
            </if>
            <if test="endDate != null">
                and <![CDATA[ record.create_time <= #{endDate} ]]>
            </if>

            <if test="id != null">
                and record.id = #{id}
            </if>
            <if test="customerId != null">
                and record.customer_id = #{customerId}
            </if>
            <if test="contractId != null">
                and record.contract_id = #{contractId}
            </if>
            <if test="contractPlanFundId != null">
                and record.contract_plan_fund_id = #{contractPlanFundId}
            </if>
            <if test="actualFundAmount != null">
                and record.actual_fund_amount = #{actualFundAmount}
            </if>
            <if test="actualFundDate != null">
                and record.actual_fund_date = #{actualFundDate}
            </if>
            <if test="payType != null">
                and record.pay_type = #{payType}
            </if>
            <if test="delFlag != null">
                and record.del_flag = #{delFlag}
            </if>
            <if test="createBy != null">
                and record.create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and record.create_time = #{createTime}
            </if>
            <if test="updateBy != null">
                and record.update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and record.update_time = #{updateTime}
            </if>
            <if test="remark != null">
                and record.remark = #{remark}
            </if>
        </where>
        order by record.create_time desc
    </select>

</mapper>
